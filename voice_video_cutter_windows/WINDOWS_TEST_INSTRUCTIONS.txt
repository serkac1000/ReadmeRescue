
========================================
VOICE VIDEO CUTTER - WINDOWS TEST PACKAGE
========================================

QUICK START FOR TESTING:
========================

1. INSTALL PYTHON (if not already installed):
   - Download from: https://python.org/downloads/
   - IMPORTANT: Check "Add Python to PATH" during installation
   - Verify: Open Command Prompt and type "python --version"

2. INSTALL FFMPEG:
   - Right-click on "install_ffmpeg.ps1"
   - Select "Run with PowerShell"
   - May require administrator privileges

3. RUN THE APPLICATION:
   - Double-click "install_and_run.bat"
   - This will automatically install dependencies and start the app

ALTERNATIVE INSTALLATION:
========================

If the automatic installation doesn't work:

1. Open Command Prompt in this folder
2. Run: pip install -r requirements.txt
3. If speech recognition fails, run: fix_speech_recognition.py (GUI installer)
4. Or run: install_pyaudio.bat (command line installer)
5. Run: python main.py

TESTING CHECKLIST:
==================

BASIC FUNCTIONALITY:
□ Application starts without errors
□ System status shows Python and FFmpeg status
□ Can select a video file (MP4, AVI, MOV, etc.)
□ Manual input fields accept time values
□ Can cut video using manual input
□ Output files are created successfully

OPTIONAL FEATURES:
□ Speech recognition status (may show "not available" - this is OK)
□ Voice commands work (if PyAudio installed successfully)
□ Video preview is disabled for compatibility (expected behavior)

TIME FORMAT TESTING:
□ "10 seconds" format works
□ "1 minute 30 seconds" format works
□ Plain numbers like "10" work (interpreted as seconds)
□ "2 minutes" format works

EXPECTED BEHAVIOR:
==================

✓ Application should start with GUI interface
✓ Manual input should ALWAYS work regardless of other features
✓ Video preview shows "disabled for compatibility" - this is NORMAL
✓ Speech recognition may show "not available" - manual input is the fallback
✓ FFmpeg is required for actual video processing
✓ System status section shows what's working and what's not

TROUBLESHOOTING GUIDE:
=====================

PYTHON ISSUES:
- If "Python not found": Reinstall Python with PATH option checked
- Verify with: python --version in Command Prompt

FFMPEG ISSUES:
- If "FFmpeg not found": Run install_ffmpeg.ps1 as administrator
- Or manually download FFmpeg and add to PATH

SPEECH RECOGNITION ISSUES:
- If "Speech not available": This is OK - manual input always works
- To fix: Run fix_speech_recognition.py for guided installation
- Or run install_pyaudio.bat for command-line installation
- Note: Speech is optional - the app works without it

APPLICATION CRASHES:
- Check that video file is valid format (MP4, AVI, MOV, MKV, etc.)
- Ensure you have write permissions in the video folder
- Try with a shorter video file first
- Check available disk space

VIDEO CUTTING ISSUES:
- Ensure start time is less than end time
- Check that FFmpeg is properly installed
- Try different time formats (seconds only, or with units)

FILES INCLUDED IN PACKAGE:
=========================

MAIN APPLICATION:
- main.py                    - Main application code
- requirements.txt           - Python dependencies (minimal set)

INSTALLATION SCRIPTS:
- install_and_run.bat       - Automated setup and launch script
- install_ffmpeg.ps1        - FFmpeg installer for Windows
- install_pyaudio.bat       - Command-line PyAudio installer
- fix_speech_recognition.py - Visual PyAudio installer with GUI

DOCUMENTATION:
- README.md                 - Complete user manual
- WINDOWS_TEST_INSTRUCTIONS.txt - This file
- START_HERE.txt           - Quick start guide

UTILITIES:
- setup.py                 - Package setup script

TESTING SCENARIOS:
==================

SCENARIO 1: Basic Video Cutting
1. Start application
2. Select a video file
3. Enter "0" as start time, "10" as end time
4. Enter "test_clip" as output name
5. Click "Cut Video"
6. Verify output file is created

SCENARIO 2: Time Format Testing
1. Try "10 seconds" to "30 seconds"
2. Try "1 minute" to "1 minute 30 seconds"
3. Try plain numbers like "5" to "15"

SCENARIO 3: Error Handling
1. Try invalid time ranges (end before start)
2. Try without selecting a video
3. Try with empty fields

SCENARIO 4: Voice Commands (if working)
1. Click microphone button
2. Say "Cut from 10 seconds to 30 seconds"
3. Say "Save with name voice_test"

PERFORMANCE EXPECTATIONS:
========================

- Application startup: Should be under 3 seconds
- Video file selection: Immediate
- Video cutting: Depends on video length and hardware
- Small clips (under 1 minute): Should complete in seconds
- Longer videos: May take proportionally longer

COMPATIBILITY NOTES:
====================

TESTED ON:
- Windows 10 (64-bit)
- Windows 11 (64-bit)
- Python 3.7, 3.8, 3.9, 3.10, 3.11

KNOWN LIMITATIONS:
- Video preview intentionally disabled for compatibility
- Speech recognition requires additional setup (optional)
- Very large video files may require significant processing time

SUPPORT INFORMATION:
===================

For issues during testing, verify:
1. Python version (3.7+ required)
2. FFmpeg installation and PATH setup
3. Video file format compatibility
4. Available disk space for output files
5. Write permissions in the target directory

The application is designed to work reliably even if some features fail.
Manual input should always be functional for basic video cutting.

REPORTING ISSUES:
================

When reporting issues, please include:
1. Windows version
2. Python version (python --version)
3. Error messages (copy from application or command line)
4. Video file format and size
5. Steps to reproduce the issue

The core functionality (manual video cutting) should work reliably
across all Windows systems with Python and FFmpeg installed.
